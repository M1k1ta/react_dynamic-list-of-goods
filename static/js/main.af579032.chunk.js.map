{"version":3,"sources":["GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","React","memo","goods","map","good","style","color","name","id","getAll","fetch","then","response","ok","Error","status","statusText","json","catch","App","useState","setGoods","className","type","onClick","sort","prevGood","currentGood","localeCompare","slice","filter","ReactDOM","render","document","getElementById"],"mappings":"iNAOaA,EAA6BC,IAAMC,MAAK,gBAAGC,EAAH,EAAGA,MAAH,OACnD,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAEE,UAAQ,OACRC,MAAO,CAAEC,MAAOF,EAAKE,OAHvB,SAKGF,EAAKG,MAJDH,EAAKI,YCNX,SAASC,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GACJ,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAJ,UAAaF,EAASG,OAAtB,cAAkCH,EAASI,aAGnD,OAAOJ,EAASK,OACbC,OAAM,WACL,MAAM,IAAIJ,MAAM,2BAKnB,ICZMK,EAAgB,WAC3B,MAA0BC,mBAAiB,IAA3C,mBAAOlB,EAAP,KAAcmB,EAAd,KAQA,OACE,sBAAKC,UAAU,MAAf,UACE,uDAEA,wBACEC,KAAK,SACL,UAAQ,aACRC,QAbc,kBAAMf,IAASE,KAAKU,IAUpC,4BAQA,wBACEE,KAAK,SACL,UAAQ,oBACRC,QAnBe,kBDQdf,IACJE,MAAK,SAAAT,GAAK,OAAIA,EAAMuB,MAAK,SAACC,EAAgBC,GAAjB,OACxBD,EAASnB,KAAKqB,cAAcD,EAAYpB,SACvCsB,MAAM,EAAG,MCXyBlB,KAAKU,IAgBxC,gCAQA,wBACEE,KAAK,SACL,UAAQ,aACRC,QAzBS,kBDaRf,IACJE,MAAK,SAAAT,GAAK,OAAIA,EAAM4B,QAAO,kBAAyB,QAAzB,EAAGxB,YCdEK,KAAKU,IAsBpC,4BAQA,cAACtB,EAAD,CAAWG,MAAOA,QCzCxB6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.af579032.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = React.memo(({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li\n        key={good.id}\n        data-cy=\"good\"\n        style={{ color: good.color }}\n      >\n        {good.name}\n      </li>\n    ))}\n  </ul>\n));\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return response.json()\n        .catch(() => {\n          throw new Error('it is catch Error');\n        });\n    });\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => goods.sort((prevGood: Good, currentGood: Good) => (\n      prevGood.name.localeCompare(currentGood.name)\n    )).slice(0, 5));\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(goods => goods.filter(({ color }) => color === 'red'));\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { GoodsList } from './GoodsList';\n\nimport { getAll, get5First, getRedGoods } from './api/goods';\nimport { Good } from './types/Good';\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n\n  const getAllGoods = () => getAll().then(setGoods);\n\n  const getFiveFirst = () => get5First().then(setGoods);\n\n  const getRed = () => getRedGoods().then(setGoods);\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of Goods</h1>\n\n      <button\n        type=\"button\"\n        data-cy=\"all-button\"\n        onClick={getAllGoods}\n      >\n        Load all goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"first-five-button\"\n        onClick={getFiveFirst}\n      >\n        Load 5 first goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"red-button\"\n        onClick={getRed}\n      >\n        Load red goods\n      </button>\n\n      <GoodsList goods={goods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}